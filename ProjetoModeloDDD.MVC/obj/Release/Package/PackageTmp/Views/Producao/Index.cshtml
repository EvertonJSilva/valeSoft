@using GridMvc.Html

@model IEnumerable<ProjetoModeloDDD.MVC.ViewModels.DTOProducaoViewModel>

@{
    ViewBag.Title = "Producao";
}

<h2>Produção</h2>
<hr />


@using (Html.BeginForm("Index", "Producao", FormMethod.Get))
{
    <span style="font-size: 15px; vertical-align:sub; float:left; line-height: 30px"> De :&nbsp</span>
    @Html.TextBox("dataInicial", ViewBag.DataInicial as string, new { @class = "form-control", @type = "Date" })
    <p style="font-size: 15px; vertical-align:sub; float:left; line-height: 30px"> Até:&nbsp</p>
    @Html.TextBox("dataFinal", ViewBag.DataFinal as string, new { @class = "form-control", @type = "Date", @style = "Width:70" })

    <p style="float:none"></p>

    if (((int)Session["nivelAcesso"]) == 2)
    {
        @Html.CheckBox("somenteMes", false)<span> Mostrar apenas consultas do mês</span>
    }

    <hr />
    <p>

        Localizar por:
        <div class="form-group">


            @Html.DropDownList("LocalizarPor", new SelectList(new List<SelectListItem>
                {
                    new SelectListItem { Selected = false, Text = "Nome Paciente", Value = "2"},
                    new SelectListItem { Selected = true, Text = "Carteirinha", Value = "1"},

}, "Value", "text", @ViewBag.LocalizarPor)
                                     , new { @class = "form-control", @style = "float:left", })

            @Html.TextBox("palavra", ViewBag.palavra as string, new { @class = "form-control", @type = "text", @placeholder = "Digite...", @style = "float:left" })
            &nbsp;
            <button type="submit" class="btn btn-theme">Pesquisar</button>

            &nbsp;
        </div>
    </p>
    <p style='float:left'><font color="blue">Situação: &nbsp;</font></p>

    @Html.RadioButton("criterio", "todos", true)<span> Todos&nbsp;</span>
    @Html.RadioButton("criterio", "revisados")<span> Revisados&nbsp;</span>
    @Html.RadioButton("criterio", "nao-revisados")<span> Não revisados&nbsp;</span>
    @Html.RadioButton("criterio", "consolidados")<span> Consolidados&nbsp;</span>
    @Html.RadioButton("criterio", "nao-consolidados")<span> Não Consolidados&nbsp;</span>

    <p style="float:none"></p>

    <p style='float:left'><font color="blue">Tipo de sessão: &nbsp; </font></p>

    @Html.RadioButton("criterioSessao", "todos", true)<span> Todos&nbsp;</span>
    @Html.RadioButton("criterioSessao", "50000470")<span> 50000470&nbsp;</span>
    @Html.RadioButton("criterioSessao", "80000509")<span> 80000509&nbsp;</span>
    @Html.RadioButton("criterioSessao", "60000678")<span> 60000678&nbsp;</span>

    <p style="float:none"></p>

    <p style='float:left'><font color="blue">Copart: &nbsp; </font></p>

    @Html.RadioButton("criterioCopart", "todos", true)<span> Todos&nbsp;</span>
    @Html.RadioButton("criterioCopart", "com")<span> Com&nbsp;</span>
    @Html.RadioButton("criterioCopart", "sem")<span> Sem&nbsp;</span>

    <p style="float:none"></p>

    if (((int)Session["nivelAcesso"]) != 2)
    {
        <button name="acao" value="REPORT" type="submit" class="btn btn-theme" style="background-color:#358a2f">Produção</button>
        @protocoloCDRCustomHelper();
    }

    <button name="acao" value="DEMONSTRATIVO" type="submit" class="btn btn-theme" style="background-color:#358a2f">Demonstrativo</button>

    if (((int)Session["nivelAcesso"]) != 2)
    {
        <button name="acao" value="CONSOLIDAR" type="submit" class="btn btn-theme" style="background-color:#ff0000">Consolidar</button>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <hr />
}

<div style="margin-right:50px">

    @Html.Grid(Model).Columns(columns =>
                {
                    columns.Add(model => model.idProducao).Titled("Id");
                    columns.Add(model => model.nomePaciente).Titled("Paciente");
                    columns.Add(model => model.nomeProfissional).Titled("Profissional");
                    columns.Add(model => model.carteirinhaPaciente).Titled("Carteirinha").SetWidth(165);
                    columns.Add(model => model.dataConsultaFormatada).Titled("Data");
                    columns.Add(model => model.autorizacao).Titled("Autorização");
                    columns.Add(model => model.numeroLiberacao).Titled("Liberação");
                    columns.Add(model => model.sessaoConsulta)
                        .Titled("Sessão")
                        .Filterable(true);
                    columns.Add(model => model.valorConsulta).Titled("Valor").Filterable(true);
                    columns.Add(model => model.valorCopart).Titled("Copart");
                    columns.Add().Titled("Revisado")
                        .Encoded(false)
                        .Sanitized(false)
                        .RenderValueAs(o => revisadoCustomHelper(o.revisado, o.idProducao)); ;
                    columns.Add().Titled("Consolidado")
                        .Encoded(false)
                        .Sanitized(false)
                        .RenderValueAs(o => ConsolidadoCustonHelper(o.consolidado));
                    columns.Add()
                          .Encoded(false)
                          .Sanitized(false)
                          .SetWidth(30)
                          .RenderValueAs(o => EditarPacienteCustonHelper(o.pacienteId));
                    columns.Add()
                          .Encoded(false)
                          .Sanitized(false)
                          .SetWidth(30)
                          .RenderValueAs(o => EditarConsultasCustonHelper(o.consultaId));


                }).WithPaging(20, 0, "grid1page").Sortable(true).Filterable(true)
</div>

@helper ConsolidadoCustonHelper(Boolean tem)
    {
        if (tem)
        {
            <span class="badge bg-success">Sim</span>
        }
        else
        {
            <span class="badge bg-important">Não</span>
        }
}


@helper EditarPacienteCustonHelper(int id)
    {
        <tooltip title="Editar">
            <button class="btn btn-primary btn-xs" onclick="location.href='@Url.Action("Edit", "Pacientes", new { id = id })'"><i class="fa fa-user"></i></button>
        </tooltip>
}
@helper EditarConsultasCustonHelper(int id)
    {
        <tooltip title="Editar">
            <button class="btn btn-primary btn-xs" onclick="location.href='@Url.Action("Edit", "Consultas", new { id = id, idLiberacao = 0 })'"><i class="fa fa-edit"></i></button>
        </tooltip>
}



@*@helper consolidadoCustomHelper(bool consolidado, int idProducao)
    {

    if (consolidado)
    {
            <input data-width="65" onchange="Consolidar(this, 1)" name="checkbox" id="checkbox" data-size="mini" type="checkbox" checked data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
    }
    else
    {
            <input data-width="65" onchange="Consolidar(this, 2)" name="checkbox" id="checkbox" data-size="mini" type="checkbox" data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
    }*@



<script>
    function Consolidar(n, cancelar) {

        var row = n.parentNode.parentNode.parentNode;
        var cols = row.getElementsByTagName("td");
        var i = 0;

        EnviaConsolidar(cols[0].childNodes[0].nodeValue, cancelar);
        elemento.bootstrapToggle();
    }

    function EnviaConsolidar(n, cancelar) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("Consolidar", "Producao")',
            // contentType: "application/json; charset=utf-8",
            data: { producaoId: n, cancelamento: cancelar },
            dataType: "json",
            success: function (result) {
                alert(result);
                window.locationre = result.url;
            }
        });
    }
</script>

@helper protocoloCDRCustomHelper()
    {

        <button name="acao" value="PROTOCOLO" onclick="ProtocoloCDR()" class="btn btn-theme" style="background-color:#358a2f">Protocolo</button>
        <input type="hidden" id="cdr" name="cdr" value="0" />

        <script>
        function ProtocoloCDR() {
        var txt;
        var Nrcdr = prompt("Digite o número de guias CDR", "0");
        var element = document.getElementById("cdr")
            element.value = Nrcdr;

            @*$.ajax({
                type: "POST",
                url: '@Url.Action("index", "Producao")',
                // contentType: "application/json; charset=utf-8",
                data: {
                    palavra: @ViewBag.palavra,
                    LocalizarPor,
                    dataInicial,
                    dataFinal,
                    acao,
                    criterio,
                    criterioSessao,
                    criterioCopart,
                    grid1page,
                    somenteMes,
                    cdr: cdr
                },
                dataType: "json",
                success: function (result) {
                    alert(result);
                    window.locationre = result.url;
                }
            });*@
        }
        </script>
}


@helper revisadoCustomHelper(bool revisado, int idProducao)
    {
        if (((int)Session["nivelAcesso"]) == 2)
        {
            if (revisado)
            {
                <span class="badge bg-success">Sim</span>
            }
            else
            {
                <span class="badge bg-important">Não</span>
            }
        }
        else
        {
            if (revisado)
            {
                <input data-width="65" onchange="Revisar(this, 1)" name="checkbox" id="checkbox" data-size="mini" type="checkbox" checked data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
            }
            else
            {
                <input data-width="65" onchange="Revisar(this, 2)" name="checkbox" id="checkbox" data-size="mini" type="checkbox" data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
            }

            <script>

            function Revisar(n, cancelar) {

            var row = n.parentNode.parentNode.parentNode;
            var cols = row.getElementsByTagName("td");
            var i = 0;

            //while (i < cols.length) {

            //    var val = cols[i].childNodes[0].nodeValue
            //    if (val != null) {
            //        alert(val);
            //    }
            //    i++;
            //}

            EnviaRevisar(cols[0].childNodes[0].nodeValue, cancelar);
            elemento.bootstrapToggle();
        }


        function EnviaRevisar(n, cancelar) {
                $.ajax({
        type: "POST",
                url: '@Url.Action("Revisar", "Producao")',
                // contentType: "application/json; charset=utf-8",
                data: { producaoId: n, cancelamento: cancelar},
                    dataType: "json",
                    success: function(result) {
            alert(result);
            window.locationre = result.url;
        }
            });
        }

            </script>
        }
}

