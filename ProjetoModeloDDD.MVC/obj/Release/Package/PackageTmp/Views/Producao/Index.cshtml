@using GridMvc.Html

@model IEnumerable<ProjetoModeloDDD.MVC.ViewModels.ProducaoViewModel>

@{
    ViewBag.Title = "Produçao";
}

<h2>Produção</h2>
<hr />


@using (Html.BeginForm("Index", "Producao", FormMethod.Get))
{
    <span style="font-size: 15px; vertical-align:sub; float:left; line-height: 30px" > De :&nbsp</span>
    @Html.TextBox("dataInicial", ViewBag.DataInicial as string, new { @class = "form-control", @type = "Date" })
    <p style="font-size: 15px; vertical-align:sub; float:left; line-height: 30px" > Até:&nbsp</p>
    @Html.TextBox("dataFinal", ViewBag.DataFinal as string, new { @class = "form-control", @type = "Date", @style = "Width:70" })
    <hr />
    <p>

            Localizar por:
            <div class="form-group">


                @Html.DropDownList("LocalizarPor", new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Selected = false, Text = "Nome Paciente", Value = "2"},
                                    new SelectListItem { Selected = true, Text = "Carteirinha", Value = "1"},

       }, "Value", "text", @ViewBag.LocalizarPor)
                     , new { @class = "form-control", @style = "float:left", })

                @Html.TextBox("palavra", ViewBag.palavra as string, new { @class = "form-control", @type = "text", @placeholder = "Digite...", @style = "float:left" })
                &nbsp;
                <button type="submit" class="btn btn-theme">Pesquisar</button>

                &nbsp;
            </div>
</p>
        @Html.RadioButton("criterio", "todos", true)<span> Todos</span>
        @Html.RadioButton("criterio", "revisados")<span> Revisados</span>
        @Html.RadioButton("criterio", "nao-revisados")<span> Não revisados</span>
        @Html.RadioButton("criterio", "consolidados")<span> Consolidados</span>
        @Html.RadioButton("criterio", "nao-consolidados")<span> Não Consolidados</span>

        <p style="float:none"></p>

        if (((int)Session["nivelAcesso"]) != 2)
    {
    <button name="acao" value="REPORT" type="submit" class="btn btn-theme" style="background-color:#358a2f">Produção</button>
    <button name="acao" value="PROTOCOLO" type="submit" class="btn btn-theme" style="background-color:#358a2f">Protocolo</button>
    }
    <button name="acao" value="DEMONSTRATIVO" type="submit" class="btn btn-theme" style="background-color:#358a2f">Demonstrativo</button>

        if (((int)Session["nivelAcesso"]) != 2)
        {
    <button name="acao" value="CONSOLIDAR" type="submit" class="btn btn-theme" style="background-color:#ff0000">Consolidar</button>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <hr />
}

<div style="margin-right:50px">
    
    @Html.Grid(Model).Columns(columns =>
{
    columns.Add(model => model.ProducaoId).Titled("Id");
    columns.Add(model => model.Consulta.Liberacao.Paciente.NomePaciente).Titled("Paciente");
    columns.Add(model => model.Consulta.Profissional.NomeProfissional).Titled("Profissional");
    columns.Add(model => model.CarteirinhaPaciente).Titled("Carteirinha").SetWidth(165);
    columns.Add(model => model.DataConsulta).Titled("Data");
    columns.Add(model => model.Consulta.Autorizacao).Titled("Autorização");
    columns.Add(model => model.Consulta.Liberacao.NumeroLiberacao).Titled("Liberação");
    columns.Add(model => model.Consulta.TipoSessao).Titled("Sessão");
    columns.Add(model => model.Consulta.ValorConsulta).Titled("Valor");
    columns.Add(model => model.Consulta.ValorCopart).Titled("Coparticipação");
    columns.Add().Titled("Revisado")
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(o => revisadoCustomHelper(o.revisado, o.ProducaoId)); ;
    columns.Add().Titled("Consolidado")
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(o => ConsolidadoCustonHelper(o.Consolidado));


}).WithPaging(20,0,"grid1page").Sortable(true)
</div>

@helper ConsolidadoCustonHelper(Boolean tem)
{
if (tem)
{
        <span class="badge bg-success">Sim</span>
}
else {
        <span class="badge bg-important">Não</span>
}
}




@*@helper consolidadoCustomHelper(bool consolidado, int idProducao)
{

if (consolidado)
{
        <input data-width="65" onchange="Consolidar(this, 1)" name="checkbox" id="checkbox" data-size="mini" type="checkbox" checked data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
}
else
{
        <input data-width="65" onchange="Consolidar(this, 2)" name="checkbox" id="checkbox" data-size="mini" type="checkbox" data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
}*@

    <script>

function Consolidar(n, cancelar) {

    var row = n.parentNode.parentNode.parentNode;
    var cols = row.getElementsByTagName("td");
    var i = 0;

    //while (i < cols.length) {

    //    var val = cols[i].childNodes[0].nodeValue
    //    if (val != null) {
    //        alert(val);
    //    }
    //    i++;
    //}

    EnviaConsolidar(cols[0].childNodes[0].nodeValue, cancelar);
    elemento.bootstrapToggle();
}

function EnviaConsolidar(n, cancelar) {
    $.ajax({
        type: "POST",
        url: '@Url.Action("Consolidar", "Producao")',
        // contentType: "application/json; charset=utf-8",
        data: { producaoId: n, cancelamento: cancelar },
        dataType: "json",
        success: function (result) {
            alert(result);
            window.locationre = result.url;
        }
    });
}

    </script>



@helper revisadoCustomHelper(bool revisado, int idProducao)
{
if (((int)Session["nivelAcesso"]) == 2)
{
    if (revisado)
    {
            <span class="badge bg-success">Sim</span>
    }
    else {
            <span class="badge bg-important">Não</span>
    }
}
else
{
    if (revisado)
    {
            <input data-width = "65" onchange = "Revisar(this, 1)" name = "checkbox" id = "checkbox" data-size = "mini" type = "checkbox" checked data-toggle = "toggle" data-on = "Sim" data-off = "Não" data-onstyle = "success" data-offstyle = "danger" >
    }
    else
    {
           <input data-width = "65" onchange = "Revisar(this, 2)" name = "checkbox" id = "checkbox" data-size = "mini" type = "checkbox" data-toggle = "toggle" data-on = "Sim" data-off = "Não" data-onstyle = "success" data-offstyle = "danger" >
    }

        <script>

            function Revisar(n, cancelar) {

            var row = n.parentNode.parentNode.parentNode;
            var cols = row.getElementsByTagName("td");
            var i = 0;

            //while (i < cols.length) {

            //    var val = cols[i].childNodes[0].nodeValue
            //    if (val != null) {
            //        alert(val);
            //    }
            //    i++;
            //}

            EnviaRevisar(cols[0].childNodes[0].nodeValue, cancelar);
            elemento.bootstrapToggle();
        }


        function EnviaRevisar(n, cancelar) {
                $.ajax({
        type: "POST",
                url: '@Url.Action("Revisar", "Producao")',
                // contentType: "application/json; charset=utf-8",
                data: { producaoId: n, cancelamento: cancelar},
                    dataType: "json",
                    success: function(result) {
            alert(result);
            window.locationre = result.url;
        }
            });
        }
        
        </script>
    }
}

