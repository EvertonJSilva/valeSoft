@model ProjetoModeloDDD.MVC.ViewModels.ConsultaViewModel

@{
    ViewBag.Title = "Editar";
    ViewBag.idLiberacaoOrigemView = ViewBag.idLiberacaoOrigem;
   
}

<h2>Editar</h2>


@using (Html.BeginForm("Edit", "Consultas", new { idLiberacaoOrigem = @ViewBag.idLiberacaoOrigem }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class="alert alert-danger" })
        @Html.HiddenFor(model => model.ConsultaId)
        @Html.HiddenFor(model => model.DataCadastro)
        @Html.HiddenFor(model => model.LiberacaoId)


        <div class="form-group">
            @Html.LabelFor(model => model.Autorizacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Autorizacao, new { htmlAttributes = new { @class = "form-control", @onkeypress="mascaraMutuario(this,cpfCnpj)", @type= "text", @id = "autorizacao" , @maxlength = "21" }  })
                @Html.ValidationMessageFor(model => model.Autorizacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FormaAutorizar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FormaAutorizar", new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Selected = true, Text = "Telefone", Value = "1"},
                        new SelectListItem { Selected = false, Text = "Portal", Value = "2"},
                        new SelectListItem { Selected = false, Text = "Guia", Value = "3"},

                    }, "Text", "Text", @ViewBag.LocalizarPor), new { @class = "form-control" })


              @Html.ValidationMessageFor(model => model.FormaAutorizar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataHoraConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataHoraConsulta, new { htmlAttributes = new { @class = "form-control" , @type = "Date"} })
                @Html.ValidationMessageFor(model => model.DataHoraConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            
                @Html.LabelFor(model => model.LiberacaoId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                        @Html.DropDownList("LiberacaoId", @ViewBag.LiberacaoId as SelectList, new { @class = "form-control", @id = "LiberacaoId" , @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.LiberacaoId, "", new { @class = "text-danger" })
                    
                </div>
        </div>
        


        <div class="form-group">
            @Html.LabelFor(model => model.TipoSessao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoSessao", new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Selected = true, Text = "Comparecimento", Value = "50000470"},
                                    new SelectListItem { Selected = false, Text = "Não-Comparecimento", Value = "80000509"},
                                    new SelectListItem { Selected = false, Text = "Psicossocial", Value = "60000678"}
                                }, "Value", "Text", @ViewBag.LocalizarPor), new { @class = "form-control", @onchange = "MostraValores()", @onfocus = "MostraValores()", @id = "TipoSessao" })

                @Html.ValidationMessageFor(model => model.TipoSessao, "", new { @class = "text-danger" })
             </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.ProfissionalId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProfissionalId", @ViewBag.ProfissionalId as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProfissionalId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Convenio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("Convenio", new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Selected = true, Text = "Unimed", Value = "1"},
                    }, "Text", "Text", @ViewBag.LocalizarPor), new { @class = "form-control" })

                 @Html.ValidationMessageFor(model => model.Convenio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorConsulta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "ValorConsulta" } })
                @Html.ValidationMessageFor(model => model.ValorConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorCopart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorCopart, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "ValorCopart" } })
                @Html.ValidationMessageFor(model => model.ValorCopart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorConvenio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorConvenio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" , @id = "ValorConvenio"} })
                @Html.ValidationMessageFor(model => model.ValorConvenio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function MostraValores() {
           
            var e1 = document.getElementById("TipoSessao");
            var sessao = e1.options[e1.selectedIndex].value;

            //var e2 = document.getElementById("LiberacaoId");
            //var liberacao = e2.options[e2.selectedIndex].value;
            var liberacao = @Model.LiberacaoId;

            ListaValores(sessao, liberacao);
            
        };

        function ListaValores(sessao, liberacao) {
            
            $.ajax({
                type: "POST",
                url: '@Url.Action("ListaValores", "Consultas")',
                // contentType: "application/json; charset=utf-8",
                data: { sessao: sessao, liberacaoId: liberacao },
                dataType: "json",
                success: function (result) {

                    //lançar consulta na nuvem
                    $('input[name="ValorConsulta"]').val(((result._ValorConsulta).toFixed(2)))
                    $('input[name="ValorCopart"]').val(((result._ValorCopart).toFixed(2)))
                    $('input[name="ValorConvenio"]').val(((result._ValorConvenio).toFixed(2)))
                    
                    //lançar consulta na local para testes
                    //$('input[name="ValorConsulta"]').val(((result._ValorConsulta).toFixed(2)).replace('.', ','))
                    //$('input[name="ValorCopart"]').val(((result._ValorCopart).toFixed(2)).replace('.', ','))
                    //$('input[name="ValorConvenio"]').val(((result._ValorConvenio).toFixed(2)).replace('.', ','))

                    window.locationre = result.url;
                }
            });
        }

        //$("#autorizacao").OnKeyPress = "formatarAutorizacao"

        function mascaraMutuario(o, f) {
            v_obj = o
            v_fun = f
            setTimeout('execmascara()', 1)
        }

        function execmascara() {
            v_obj.value = v_fun(v_obj.value)
        }

        function cpfCnpj(v) {

            //Remove tudo o que não é dígito
            v = v.replace(/\D/g, "")

            if (v.length <= 5) { //CPF

                v = v.replace(/(\d{4})(\d)/, "$1.$2")

            } else { //CNPJ
                //9999.9999.99-99999999
                v = v.replace(/^(\d{4})(\d)/, "$1.$2")

                v = v.replace(/^(\d{4})\.(\d{4})(\d)/, "$1.$2.$3")

                v = v.replace(/(\d{4})\.(\d{4})\.(\d{2})(\d)/, "$1.$2.$3-$4")
            }

            return v

        }

        //$("#autorizacao").mask('9999.9999.99-99999999');
        
    </script>

}

