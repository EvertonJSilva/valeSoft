@model IEnumerable<ProjetoModeloDDD.MVC.ViewModels.ConsultaViewModel>
@using GridMvc.Html

@{
    ViewBag.Title = "Consultas";
}

<h2>Consultas</h2>
<hr/>
    @using (Html.BeginForm("Index", "Consultas", FormMethod.Get))
    {
        <p>
            Localizar por:
            <div class="form-group">
                
                @Html.DropDownList("LocalizarPor", new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Selected = true, Text = "Nome Paciente", Value = "2"},
                                    new SelectListItem { Selected = false, Text = "Liberação", Value = "1"},
                                }, "Value", "text", @ViewBag.LocalizarPor)
                     , new { @class = "form-control", @style = "float:left",  })
                
                @Html.TextBox("palavra", ViewBag.palavra as string, new { @class = "form-control", @type = "text", @placeholder = "Digite...", @style = "float:left" })
                &nbsp;
                <button type="submit" class="btn btn-theme">Pesquisar</button>
                &nbsp;
               <!--@Html.ActionLink("Criar Novo", "Create", null, new { @class = "btn btn-theme", @style = "background-color:#174e9b" })-->
        
                @if (((int)Session["nivelAcesso"]) == 2)
                {
                 @Html.CheckBox("somenteMes", true)<span> Mostrar apenas consultas do mês</span>
                }

            </div>
        </p>
    }

    <div style="margin-right:30px">
        @Html.Grid(Model).Columns(columns =>
   {
       columns.Add(model => model.Status).Titled("Status");
       columns.Add(model => model.Liberacao.Paciente.NomePaciente).Titled("Paciente").SetWidth(600);
       columns.Add(model => model.Profissional.NomeProfissional).Titled("Profissional");
       columns.Add(model => model.Liberacao.NumeroLiberacao).Titled("Liberação");
       columns.Add(model => model.dataConsulaFormatada).Titled("Data").SetWidth(100);
       columns.Add(model => model.Autorizacao).Titled("Autorização").SetWidth(300);
       columns.Add(model => model.FormaAutorizar).Titled("Forma Autorização");
       columns.Add(model => model.valorFormatado).Titled("Valor").SetWidth(100);

       columns.Add()
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(o => SalvarCustonHelper(o.ConsultaId));
       columns.Add()
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(o => EditarCustonHelper(o.ConsultaId));
       columns.Add()
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(o => DeletarCustonHelper(o.ConsultaId));

   }).WithPaging(20, 0, "grid1page").Sortable(true)
    </div>

    @helper SalvarCustonHelper(int id)
    {
    <tooltip title="Detalhes">
        <button class="btn btn-success btn-xs" onclick="location.href='@Url.Action("Details", "Consultas", new { id = id })'"><i class="fa fa-check"></i></button>
    </tooltip>
}

    @helper EditarCustonHelper(int id)
    {
    <tooltip title="Editar">
        <button class="btn btn-primary btn-xs" onclick="location.href='@Url.Action("Edit", "Consultas", new { id = id, idLiberacao = 0 })'"><i class="fa fa-pencil"></i></button>
    </tooltip>
}

    @helper DeletarCustonHelper(int id)
    {
    <tootltip title="Excluir">
        <button class="btn btn-danger btn-xs" onclick="location.href='@Url.Action("Delete", "Consultas", new { id = id })'"><i class="fa fa-trash-o "></i></button>
    </tootltip>
}




