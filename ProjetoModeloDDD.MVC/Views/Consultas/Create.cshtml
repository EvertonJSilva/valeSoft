@model ProjetoModeloDDD.MVC.ViewModels.ConsultaViewModel

@{
    ViewBag.Title = "Incluir";
}

<h2>Incluir</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Autorizacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Autorizacao, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.Autorizacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FormaAutorizar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FormaAutorizar", new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Selected = true, Text = "Telefone", Value = "1"},
                                    new SelectListItem { Selected = false, Text = "Internet", Value = "2"},
                                }, "Text", "Text", @ViewBag.LocalizarPor), new { @class = "form-control" })


                @*@Html.EditorFor(model => model.FormaAutorizar, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.FormaAutorizar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataHoraConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataHoraConsulta, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.DataHoraConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorConsulta, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @step = "any" } })
                @Html.ValidationMessageFor(model => model.ValorConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Convenio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Convenio", new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Selected = true, Text = "Unimed", Value = "1"},
                                }, "Text", "Text", @ViewBag.LocalizarPor), new { @class = "form-control" })
                 @Html.ValidationMessageFor(model => model.Convenio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorCopart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorCopart, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.ValorCopart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorConvenio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorConvenio, new { htmlAttributes = new { @class = "form-control" , @type = "number" } })
                @Html.ValidationMessageFor(model => model.ValorConvenio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoSessao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipoSessao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoSessao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LiberacaoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LiberacaoId", @ViewBag.LiberacaoId as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LiberacaoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfissionalId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProfissionalId", @ViewBag.ProfissionalId as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProfissionalId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
