@using GridMvc.Html

@model IEnumerable<ProjetoModeloDDD.MVC.ViewModels.ProducaoViewModel>

@{
    ViewBag.Title = "Produçao";
}

<h2>Produção</h2>
<hr/>

@using (Html.BeginForm("Index", "Producao", FormMethod.Get))
{
    <p>    
        Localizar por:
        <div class="form-group">

            @Html.DropDownList("LocalizarPor", new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Selected = true, Text = "Carteirinha", Value = "1"},
                                    new SelectListItem { Selected = false, Text = "Nome Paciente", Value = "2"},
                                }, "Value", "text", @ViewBag.LocalizarPor)
                     , new { @class = "form-control", @style = "float:left", })

            @Html.TextBox("palavra", ViewBag.palavra as string, new { @class = "form-control", @type = "text", @placeholder = "Digite...", @style = "float:left" })
            &nbsp;
            <button type="submit" class="btn btn-theme">Pesquisar</button>
            &nbsp;
            @Html.ActionLink("Produção", "Report", new { palavra = ViewBag.palavra }, new { @class = "btn btn-theme", @style = "background-color:#358a2f", @FormMethod.Post })
            @Html.ActionLink("Protocolo", "Protocolo", new { palavra = ViewBag.palavra }, new { @class = "btn btn-theme", @style = "background-color:#358a2f", @FormMethod.Post })
            @Html.ActionLink("Demonstrativo", "Demonstrativo", new { palavra = ViewBag.palavra }, new { @class = "btn btn-theme", @style = "background-color:#358a2f", @FormMethod.Post })

            
             
        </div>
    </p>
}

<div style="margin-right:50px">
    @Html.Grid(Model).Columns(columns =>
{
    columns.Add(model => model.Consulta.Liberacao.Paciente.NomePaciente).Titled("Nome Paciente");
    columns.Add(model => model.Consulta.Profissional.NomeProfissional).Titled("Nome Profissional");
    columns.Add(model => model.CarteirinhaPaciente).Titled("Carteirinha");
    columns.Add(model => model.Consulta.Liberacao.NumeroLiberacao).Titled("Liberação");
    columns.Add(model => model.Consulta.TipoSessao).Titled("Sessao");
    columns.Add(model => model.Consulta.ValorConsulta).Titled("Valor");
    columns.Add().Titled("Revisado")
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(o => revisadoCustomHelper(o.revisado, o.ProducaoId)); ;



}).WithPaging(5).Sortable(true)
</div>



@helper revisadoCustomHelper(bool revisado,int id){

if (revisado)
{
        <input data-size="mini" type="checkbox" checked data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
}
else
{
        <input data-size="mini" type="checkbox" data-toggle="toggle" data-on="Sim" data-off="Não" data-onstyle="success" data-offstyle="danger">
}


}

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
